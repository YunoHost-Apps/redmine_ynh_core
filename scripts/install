#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=/

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================

final_path=/opt/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Check web path availability
ynh_webpath_available $domain $path_url
# Register (book) web path
ynh_webpath_register $app $domain $path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path_url

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_install_app_dependencies ruby-zip libssl-dev libyaml-dev libcurl4-openssl-dev ruby gem libapr1-dev libxslt1-dev checkinstall libxml2-dev ruby-dev vim libmagickwand-dev imagemagick postgresql

#=================================================
# CREATE A POSTGRES DATABASE
#=================================================

db_name=$(ynh_sanitize_dbid $app)
db_pwd=$(ynh_string_random)
ynh_app_setting_set $app db_name $db_name
ynh_app_setting_set $app psqlpwd $db_pwd
ynh_psql_test_if_first_run
ynh_psql_create_db $db_name $db_name $db_pwd

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

ynh_app_setting_set $app final_path $final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================

# Create a system user
ynh_system_user_create $app

#=================================================
# SPECIFIC SETUP
#=================================================
# CONFIGURE THE DATABASE
#=================================================

cp -a ../conf/database.yml "$final_path/config/database.yml"
ynh_replace_string "__DB_NAME__" "$db_name" "$final_path/config/database.yml"
ynh_replace_string "__DB_PWD__" "$db_pwd" "$final_path/config/database.yml"

#=================================================
# SETUP PUMA, A RUBY SERVER
#=================================================

ruby --version >&2

# https://www.rosehosting.com/blog/install-redmine-on-an-ubuntu-14-04-server-with-mariadb-puma-and-nginx/

# Copy the configuration for puma
cp -a ../conf/puma.rb "$final_path/config/puma.rb"
ynh_replace_string "__FINALPATH__" "$final_path" "$final_path/config/puma.rb"

# Install puma with gem
(cd "$final_path"
gem install bundler
echo "gem 'puma'" >> Gemfile.local
echo "gem: --no-ri --no-rdoc" >> ~/.gemrc
bundle install --without development test postgresql)

#=================================================
# PREPARE THE DATABASE
#=================================================

# !!!???
rake generate_secret_token
RAILS_ENV=production rake db:migrate
RAILS_ENV=production REDMINE_LANG=en rake redmine:load_default_data
# I don't have the slightest idea about what I'm doing here...
# Just a stupid copy of a random tuto...

#=================================================
# SETUP SYSTEMD
#=================================================

# Create a dedicated systemd config
ynh_systemd_config

#=================================================
# STORE THE CHECKSUM OF THE CONFIG FILE
#=================================================

# Calculate and store the config file checksum into the app settings
# ynh_store_file_checksum "$final_path/CONFIG_FILE"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
chown -R $app: $final_path

#=================================================
# SETUP LOGROTATE
#=================================================

mkdir /var/log/$app
chown -R $app: /var/log/$app

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add redmine --log "/var/log/$app/$app/log"

#=================================================
# SETUP SSOWAT
#=================================================

ynh_app_setting_set $app unprotected_uris "/"

#=================================================
# START PUMA AND REDMINE
#=================================================

systemctl restart $app

#=================================================
# RELOAD NGINX
#=================================================

systemctl reload nginx
